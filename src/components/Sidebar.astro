---
import type {CollectionEntry} from 'astro:content';
import image from '../content/portfolio/me-duck.png';
import ImageLink from './ImageLink.astro';
// Sidebar.astro: Receives a `portfolio` prop (array of entries)
export interface Props {
  portfolio: Array<CollectionEntry<'portfolio'>>;
  selected: string;
}
const { portfolio } = Astro.props;
const width = "20vw";

---
<aside class="Sidebar" data-controller="nav-sidebar" data-nav-sidebar-default-thumbnail-src={image.src}>
  <div class="Sidebar_thumbnail-container">
    <ImageLink href="/" width={width} height={width} data-nav-sidebar-target="thumbnail"/>
  </div>
  <nav class="Sidebar_nav">
    <ul style="list-style: none; padding: 0; margin: 0;">
      {portfolio.map(item => (
        <li class={`Sidebar_item ${item.slug === Astro.props.selected ? 'Sidebar_item--selected' : ''}`}>
          <a
            href={"/portfolio/" + item.slug}
            class="h1"
            data-action="
              mouseover->nav-sidebar#setThumbnail
              mouseout->nav-sidebar#resetThumbnail"
            data-nav-sidebar-src-param={item.data.image.src}
          >
            {item.data.title}
          </a>
        </li>
      ))}
    </ul>
  </nav>
</aside>
<style define:vars={{width}}>
  .Sidebar {
    box-sizing: border-box;
    height: max(100vh, 100%);
    text-align: center;
    background: var(--medium-gray);
    overflow: hidden;

    /* Ensure the main content is centered in the viewport */
    margin-right: calc(var(--width) * -1);

    /* Ensure it's always on top */
    position: relative;
    z-index: 999;
  }
  .Sidebar_thumbnail-container {
    background: linear-gradient(to bottom, #fff, var(--medium-gray));
    padding: 2rem 0;
  }
  .Sidebar_item {
    a {
      padding: 1rem 0;
    }

    &:hover, &.Sidebar_item--selected {
      background: #fff;
    }
  }
</style>
